name: Emulator Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  emulator-tests:
    runs-on: ubuntu-latest
    # Only run on main branch pushes or manual triggers to save CI resources
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create secrets.properties
      run: |
        echo "TRAKT_API_KEY=${{ secrets.TRAKT_API_KEY }}" >> secrets.properties
        echo "OMDB_API_KEY=${{ secrets.OMDB_API_KEY }}" >> secrets.properties
        echo "TMDB_READ_KEY=${{ secrets.TMDB_READ_KEY }}" >> secrets.properties
        
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: Cache AVD
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-30
        
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: android-tv
        arch: x86_64
        profile: tv_1080p
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
        
    - name: Run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: android-tv
        arch: x86_64
        profile: tv_1080p
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          # Wait for emulator to fully boot
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\''\r'\'') ]]; do sleep 1; done; input keyevent 82'
          
          # Basic smoke tests
          echo "Running basic smoke tests..."
          
          # Install and launch the app
          ./gradlew assembleDebug
          adb install app/build/outputs/apk/debug/app-debug.apk
          
          # Launch the app and verify it starts
          adb shell am start -n com.strmr.ai/.MainActivity
          sleep 5
          
          # Take a screenshot for verification
          adb shell screencap -p /sdcard/screenshot.png
          adb pull /sdcard/screenshot.png screenshot.png
          
          # Check if app is running
          APP_RUNNING=$(adb shell ps | grep com.strmr.ai | wc -l)
          if [ "$APP_RUNNING" -gt 0 ]; then
            echo "✅ App is running successfully"
          else
            echo "❌ App failed to start"
            exit 1
          fi
          
          # Basic navigation test (simulate DPAD navigation)
          echo "Testing basic DPAD navigation..."
          adb shell input keyevent 20  # DPAD_DOWN
          sleep 1
          adb shell input keyevent 19  # DPAD_UP
          sleep 1
          adb shell input keyevent 22  # DPAD_RIGHT
          sleep 1
          adb shell input keyevent 21  # DPAD_LEFT
          sleep 1
          
          # Test back button
          adb shell input keyevent 4   # BACK
          sleep 2
          
          echo "✅ Basic smoke tests completed successfully"
          
    - name: Upload emulator screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: emulator-screenshots
        path: "*.png"
        
    - name: Upload emulator logs
      if: failure()
      run: |
        adb logcat -d > logcat.txt || true
        
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: emulator-logs
        path: logcat.txt